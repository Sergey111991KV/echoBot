# HLint configuration file
# https://github.com/ndmitchell/hlint
##########################

# This file contains a template configuration file, which is typically
# placed as .hlint.yaml in the root of your project


# Specify additional command line arguments
#
- arguments: [--color, --cpp-simple, -XQuasiQuotes, -XHaskell2010, -XNoMagicHash, -XArrows]


# Control which extensions/flags/modules/functions can be used
#
- extensions:
  - default: false # all extension are banned by default
  - name: [DeriveDataTypeable, DeriveFunctor, GeneralizedNewtypeDeriving, NoMonomorphismRestriction, OverloadedStrings]
  - name: [MultiWayIf, PatternGuards, RecordWildCards, ViewPatterns, PatternSynonyms, TupleSections, LambdaCase]
  - name: [Rank2Types, ScopedTypeVariables]
  - name: [ExistentialQuantification, MultiParamTypeClasses, NamedFieldPuns]
  - name: [FlexibleContexts, FlexibleInstances]
  - name: [PackageImports]
  - name: [ConstraintKinds, RankNTypes, TypeFamilies]
  - name: [TemplateHaskell]
  - {name: CPP, within: [HsColour, Config.Yaml, Test.Annotations]} # CPP can only be used in a given module

- flags:
  - default: false
  - {name: [-Wno-missing-fields, -fno-cse, -O0], within: CmdLine} # for cmdargs
  - {name: [-Wno-incomplete-patterns, -Wno-overlapping-patterns]} # the pattern match checker is not very good

- modules:
  - {name: [Data.Set, Data.HashSet], as: Set}
  - {name: [Data.Map, Data.HashMap.Strict, Data.HashMap.Lazy], as: Map}
  - {name: Control.Arrow, within: []}

- functions:
  - {name: unsafeInterleaveIO, within: Parallel}
  - {name: unsafePerformIO, within: [Util.exitMessageImpure, Test.Util.ref, Timing]}
  - {name: unsafeCoerce, within: [Util.gzip, GHC.Util.Refact.Utils]}
  - {name: Data.List.nub, within: []}
  - {name: Data.List.nubBy, within: []}
  - {name: Data.List.NonEmpty.nub, within: []}
  - {name: Data.List.NonEmpty.nubBy, within: []}


# Add custom hints for this project
#
# Will suggest replacing "wibbleMany [myvar]" with "wibbleOne myvar"
# - error: {lhs: "wibbleMany [x]", rhs: wibbleOne x}


# Turn on hints that are off by default
#
# Ban "module X(module X) where", to require a real export list
- warn: {name: Use explicit module export list}
#
# Replace a $ b $ c with a . b $ c
- group: {name: dollar, enabled: true}
#
# Generalise map to fmap, ++ to <>
- group: {name: generalise, enabled: true}


# Ignore some builtin hints
# - ignore: {name: Use let}
# - ignore: {name: Use const, within: SpecialModule} # Only within certain modules


# Define some custom infix operators
# - fixity: infixr 3 ~^#^~


# To generate a suitable file for HLint do:
# $ hlint --default > .hlint.yaml
